[{"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\index.js":"1","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\Theme.js":"2","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\index.js":"3","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\App.js":"4","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\routes\\History.js":"5","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\routes\\Routes.js":"6","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Loader\\Loader.js":"7","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\reducers\\index.js":"8","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\sagas\\index.js":"9","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\LazyLoaded.js":"10","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\PrivateRoute.js":"11","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Loader\\LoaderReducer.js":"12","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureReducer.js":"13","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Snackbar\\SnackbarReducer.js":"14","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureSagas.js":"15","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Table\\TableReducer.js":"16","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Setting\\SettingReducer.js":"17","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\Auth.js":"18","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Navbar\\Navbar.js":"19","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\Login\\Login.js":"20","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\NotFound\\NotFound.js":"21","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Loader\\LoaderTypes.js":"22","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Snackbar\\SnackbarTypes.js":"23","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureTypes.js":"24","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureApis.js":"25","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureAction.js":"26","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Table\\TableTypes.js":"27","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\Shared.js":"28","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Setting\\SettingTypes.js":"29","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\ContactTracing\\ContactTracing.js":"30","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\Settings\\Settings.js":"31","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\Queue\\Queue.js":"32","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\Button\\Button.js":"33","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Snackbar\\SnackbarAction.js":"34","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\assets\\Local\\messages.js":"35","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\Button\\ButtonGroup.js":"36","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Table\\Table.js":"37","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\network\\apis\\index.js":"38","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\assets\\Local\\ar.js":"39","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\assets\\Local\\en.js":"40","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Setting\\SettingAction.js":"41","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Table\\TableAction.js":"42","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\Button\\PaperButton.js":"43","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Table\\Title.js":"44","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\Constants.js":"45","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\network\\interceptors\\index.js":"46","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Loader\\LoaderAction.js":"47","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Table\\CustomersTable.js":"48","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Table\\PossibleContactsTable.js":"49","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Snackbar\\Snackbar.js":"50","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\CustomerForm\\CustomerForm.js":"51","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\InputField\\ForgotPasswordField.js":"52","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\InputField\\LoginField.js":"53","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\InputField\\RegisterField.js":"54"},{"size":288,"mtime":1611172230365,"results":"55","hashOfConfig":"56"},{"size":1334,"mtime":1611172230309,"results":"57","hashOfConfig":"56"},{"size":576,"mtime":1611172230379,"results":"58","hashOfConfig":"56"},{"size":799,"mtime":1611688408549,"results":"59","hashOfConfig":"56"},{"size":89,"mtime":1611172230368,"results":"60","hashOfConfig":"56"},{"size":769,"mtime":1611688408562,"results":"61","hashOfConfig":"56"},{"size":368,"mtime":1611172230359,"results":"62","hashOfConfig":"56"},{"size":386,"mtime":1611172230379,"results":"63","hashOfConfig":"56"},{"size":250,"mtime":1611172230380,"results":"64","hashOfConfig":"56"},{"size":366,"mtime":1611688408568,"results":"65","hashOfConfig":"56"},{"size":540,"mtime":1611688408574,"results":"66","hashOfConfig":"56"},{"size":310,"mtime":1611172230373,"results":"67","hashOfConfig":"56"},{"size":335,"mtime":1611172230372,"results":"68","hashOfConfig":"56"},{"size":426,"mtime":1611172230377,"results":"69","hashOfConfig":"56"},{"size":655,"mtime":1611172230372,"results":"70","hashOfConfig":"56"},{"size":356,"mtime":1611172230378,"results":"71","hashOfConfig":"56"},{"size":364,"mtime":1611172230374,"results":"72","hashOfConfig":"56"},{"size":390,"mtime":1611688408564,"results":"73","hashOfConfig":"56"},{"size":6439,"mtime":1611695979731,"results":"74","hashOfConfig":"56"},{"size":5559,"mtime":1611688408559,"results":"75","hashOfConfig":"56"},{"size":272,"mtime":1611172230361,"results":"76","hashOfConfig":"56"},{"size":84,"mtime":1611172230373,"results":"77","hashOfConfig":"56"},{"size":92,"mtime":1611172230377,"results":"78","hashOfConfig":"56"},{"size":142,"mtime":1611172230372,"results":"79","hashOfConfig":"56"},{"size":282,"mtime":1611172230371,"results":"80","hashOfConfig":"56"},{"size":262,"mtime":1611172230371,"results":"81","hashOfConfig":"56"},{"size":76,"mtime":1611172230379,"results":"82","hashOfConfig":"56"},{"size":590,"mtime":1611688408576,"results":"83","hashOfConfig":"56"},{"size":84,"mtime":1611172230376,"results":"84","hashOfConfig":"56"},{"size":3308,"mtime":1611711432698,"results":"85","hashOfConfig":"56"},{"size":5568,"mtime":1611172230365,"results":"86","hashOfConfig":"56"},{"size":2192,"mtime":1611172230364,"results":"87","hashOfConfig":"56"},{"size":249,"mtime":1611172230357,"results":"88","hashOfConfig":"56"},{"size":290,"mtime":1611172230376,"results":"89","hashOfConfig":"56"},{"size":119,"mtime":1611172230311,"results":"90","hashOfConfig":"56"},{"size":1734,"mtime":1611172230358,"results":"91","hashOfConfig":"56"},{"size":4569,"mtime":1611688408546,"results":"92","hashOfConfig":"56"},{"size":585,"mtime":1611172230366,"results":"93","hashOfConfig":"56"},{"size":1387,"mtime":1611172230310,"results":"94","hashOfConfig":"56"},{"size":790,"mtime":1611172230310,"results":"95","hashOfConfig":"56"},{"size":228,"mtime":1611172230374,"results":"96","hashOfConfig":"56"},{"size":218,"mtime":1611172230378,"results":"97","hashOfConfig":"56"},{"size":1732,"mtime":1611172230358,"results":"98","hashOfConfig":"56"},{"size":373,"mtime":1611172230362,"results":"99","hashOfConfig":"56"},{"size":54,"mtime":1611688408566,"results":"100","hashOfConfig":"56"},{"size":988,"mtime":1611172230367,"results":"101","hashOfConfig":"56"},{"size":260,"mtime":1611172230373,"results":"102","hashOfConfig":"56"},{"size":9888,"mtime":1611711232491,"results":"103","hashOfConfig":"56"},{"size":5103,"mtime":1611696304695,"results":"104","hashOfConfig":"56"},{"size":1017,"mtime":1611688408544,"results":"105","hashOfConfig":"56"},{"size":4864,"mtime":1611688408551,"results":"106","hashOfConfig":"56"},{"size":1910,"mtime":1611688408529,"results":"107","hashOfConfig":"56"},{"size":2115,"mtime":1611688408539,"results":"108","hashOfConfig":"56"},{"size":4829,"mtime":1611688408540,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1otbhux",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"112"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"112"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"112"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"112"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"112"},"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\index.js",[],["240","241"],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\Theme.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\index.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\App.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\routes\\History.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\routes\\Routes.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\sagas\\index.js",["242"],"import { FeatureSaga1 } from '../Feature1/FeatureSagas';\r\nimport { fork, all } from \"redux-saga/effects\";\r\n\r\nexport function* watchSagas() {\r\n  //Combine sagas with \r\n  yield all([FeatureSaga1()]);\r\n  // OR\r\n  // yield all([fork(FeatureSaga1)]);\r\n}\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\LazyLoaded.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Loader\\LoaderReducer.js",["243"],"import * as types from \"./LoaderTypes\";\r\n\r\nconst INITIAL_STATE = false;\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_LOADER:\r\n      return action.data;\r\n    case types.HIDE_LOADER:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureReducer.js",["244"],"import * as types from \"./FeatureTypes\";\r\n\r\nconst INITIAL_STATE = {};\r\n\r\n// Replace with you own reducer\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case types.GET_DATA_RECEIVE:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Snackbar\\SnackbarReducer.js",["245"],"import * as types from \"./SnackbarTypes\";\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        message: action.message,\r\n        type: action.snacknarType\r\n      };\r\n    case types.HIDE_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        isOpen: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureSagas.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Table\\TableReducer.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Setting\\SettingReducer.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\Auth.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Navbar\\Navbar.js",["246"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeveloperBoardIcon from \"@material-ui/icons/DeveloperBoard\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Logo from \"../../assets/images/ScreenitLogo.png\";\r\nimport Queue from \"../../containers/Queue/Queue\";\r\nimport ContactTracing from \"../../containers/ContactTracing/ContactTracing\";\r\nimport Settings from \"../../containers/Settings/Settings\";\r\nimport history from \"../../routes/History\";\r\nimport Auth from \"../../utils/Auth\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n    }),\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  drawerIcon: {\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    backgroundColor: theme.palette.primary.dark,\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  icons: {\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  iconsSelected: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n}));\r\n\r\nexport default function Navbar({ props }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const [selected, setSelected] = useState(0);\r\n  const pages = [\r\n    { title: \"Queue\", route: \"/queue\", adminRequired: false },\r\n    {\r\n      title: \"Contact Tracing\",\r\n      route: \"/contactTracing\",\r\n      adminRequired: false,\r\n    },\r\n    { title: \"Main Setting\", route: \"/settings\", adminRequired: true },\r\n  ];\r\n\r\n  const handleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <img src={Logo} alt=\"ScreenIT\" width=\"150\" height=\"150\"></img>\r\n            <IconButton onClick={handleDrawer} className={classes.drawerIcon}>\r\n              {open ? <ChevronLeftIcon /> : <MenuIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {pages.map((page, i) => (\r\n              <ListItem\r\n                button\r\n                key={page.title}\r\n                selected={selected === i}\r\n                onClick={() => setSelected(i)}\r\n                component={Link}\r\n                to={page.route}\r\n\r\n              >\r\n                <ListItemIcon\r\n                  className={\r\n                    selected === i ? classes.iconsSelected : classes.icons\r\n                  }\r\n                >\r\n                  {i === 0 && <DeveloperBoardIcon />}\r\n                  {i === 1 && <PeopleAltIcon />}\r\n                  {i === 2 && <SettingsIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={page.title} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem\r\n              button\r\n              key=\"Sign Out\"\r\n              component={Link}\r\n              to={\"/login\"}\r\n            >\r\n              <ListItemIcon className={classes.icons}>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Sign Out\"} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div />\r\n          <Switch>\r\n            <Route path=\"/queue\">\r\n              <Queue props={props} />\r\n            </Route>\r\n            <Route path=\"/contactTracing\">\r\n              <ContactTracing props={props} />\r\n            </Route>\r\n            <Route path=\"/settings\">\r\n              <Settings />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\Login\\Login.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\NotFound\\NotFound.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Loader\\LoaderTypes.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Snackbar\\SnackbarTypes.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureTypes.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureApis.js",["247"],"import {axiosInstance} from '../../network/apis';\r\nconst handlerEnabled = false;\r\n\r\n// Replace endpoint and change api name\r\nconst apiExampleRequest = async () => {\r\n  return await axiosInstance.get(`ENDPOINT`, { handlerEnabled });\r\n};\r\n\r\nexport default {\r\n  apiExampleRequest\r\n};\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Feature1\\FeatureAction.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Table\\TableTypes.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\Shared.js",["248"],"import store from \"../store\";\r\nimport { showSnackbarAction } from \"../store/Snackbar/SnackbarAction\";\r\nimport messages from \"../assets/Local/messages\";\r\n\r\n// To show error message that returned from backend\r\nexport function dispatchSnackbarError(data) {\r\n  if (data) {\r\n    const errorMsg = data.errors.message;\r\n    store.dispatch(showSnackbarAction(errorMsg, \"error\"));\r\n  }\r\n}\r\n// To show success message after any success request if needed and rendered from locale files\r\nexport function dispatchSnackbarSuccess(message) {\r\n  store.dispatch(showSnackbarAction(message, \"success\"));\r\n}\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Setting\\SettingTypes.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\ContactTracing\\ContactTracing.js",["249","250","251","252","253","254","255","256","257","258"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import PaperButton from '../../components/Controls/Button/PaperButton'\r\nimport ButtonGroup from '../../components/Controls/Button/ButtonGroup'\r\nimport CustomersTable from '../../components/Table/CustomersTable'\r\nimport PossibleContactsTable from '../../components/Table/PossibleContactsTable'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n          width: theme.spacing(16),\r\n          height: theme.spacing(16),\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        //display: \"flex\",\r\n        //overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n    button: {\r\n      margin: theme.spacing(2),\r\n    }\r\n    // fixedHeight: {\r\n    //     height: 500,\r\n    // }\r\n}));\r\n\r\nexport default function ContactTracing(props) {\r\n  const classes = useStyles();\r\n  const [buttons] = useState([\r\n      {quantity: 128, category: \"Contact Trace\", icon: PeopleAltIcon}\r\n  ]);\r\n\r\n  return(\r\n      <Grid container spacing={3} justify=\"center\" alignItems=\"baseline\">\r\n        <Grid item xs={10}>\r\n          <Button\r\n            variant=\"contained\"\r\n            classes={classes.button}\r\n            color=\"secondary\"\r\n            style={{ borderRadius: 5, margin: 5 }}\r\n          >\r\n            <span style={{color: \"white\"}} >Notify</span>\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            classes={classes.button}\r\n            color=\"secondary\"\r\n            style={{ borderRadius: 5, margin: 5  }}\r\n          >\r\n            <span style={{color: \"white\"}} >Export</span>\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={10}>\r\n            <Paper className={classes.paper} >\r\n                <CustomersTable />\r\n            </Paper>\r\n        </Grid>\r\n      </Grid>\r\n  )\r\n}\r\n/*\r\n\r\n  <Grid item xs={10}>\r\n    <Paper className={classes.paper}>\r\n      <SearchIcon />\r\n      <InputBase\r\n              className={classes.input}\r\n              placeholder=\"Search\"\r\n              inputProps={{ 'aria-label': 'Search' }}\r\n            />\r\n    </Paper>\r\n  </Grid>\r\n*/\r\n\r\n\r\n\r\n//<IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n//</IconButton>\r\n\r\n/*\r\n<Grid item xs={12}>\r\n    <ButtonGroup buttons={buttons} page=\"Queue\"/>\r\n</Grid>\r\n    */\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         lang : state.lang\r\n//     }\r\n// }\r\n\r\n// export default connect(mapStateToProps,null)(Home);\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\Settings\\Settings.js",["259"],"import React , { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ButtonGroup from '../../components/Controls/Button/ButtonGroup'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport WidgetsIcon from '@material-ui/icons/Widgets';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { MenuItem, TextField, Select} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n          width: theme.spacing(16),\r\n          height: theme.spacing(16),\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.85),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 1),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(3),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: '20ch',\r\n        },\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n}));\r\n\r\nexport default function Settings(props) {\r\n    const classes = useStyles();\r\n    const [buttons] = useState([\r\n        { category: \"General\", icon: SettingsIcon},\r\n        { category: \"Privacy\", icon: LockIcon},\r\n        { category: \"Notifications\", icon: NotificationsIcon},\r\n        { category: \"Permissions\", icon: WidgetsIcon},\r\n    ]);\r\n    return(\r\n        <Grid container spacing={3} justify=\"center\">\r\n            <Grid item xs={6}>\r\n                <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                    placeholder=\"Search…\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    />\r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ButtonGroup buttons={buttons} page=\"Settings\"/>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n                <Paper className={classes.paper}>\r\n                    <form noValidate autoComplete=\"off\">\r\n                      <h6>Max Capacity</h6>\r\n                      <TextField margin=\"normal\" variant=\"outlined\" label=\"Enter numeric value\" defaultValue=\"10\"\r\n                      helperText=\"Change maximum capacity of people allowed inside\"\r\n                      id = \"max-capacity\" />\r\n                      <h6>Languages</h6>\r\n                      <p></p>\r\n                      <Select\r\n                        labelId = \"language-select\"\r\n                        defaultValue = {\"enUS\"}\r\n                      >\r\n                        <MenuItem value={\"enUS\"}>English</MenuItem>\r\n                        <MenuItem value={\"frFR\"}>French</MenuItem>\r\n                        <MenuItem value={\"esES\"}>Spanish</MenuItem>\r\n                      </Select>\r\n                      <p></p>\r\n                    </form>\r\n                    {/* Privacy */}\r\n                    <form noValidate autoComplete=\"off\">\r\n                    </form>\r\n                    {/* Notifications */}\r\n                    <form noValidate autoComplete=\"off\">\r\n                      <h6>Notification Message</h6>\r\n                      <TextField margin=\"normal\" variant=\"outlined\" placeholder=\"Enter Message ...\"\r\n                      helperText=\"Customize message used to notify clients to enter\"\r\n                      id = \"notif-msg\" />\r\n                      <h6>Mode</h6>\r\n                      <p></p>\r\n                      <Select\r\n                        labelId = \"notif-select\"\r\n                        defaultValue = {\"sms\"}\r\n                      >\r\n                        <MenuItem value={\"sms\"}>Text message</MenuItem>\r\n                        <MenuItem value={\"call\"}>Call</MenuItem>\r\n                      </Select>\r\n                      <p></p>\r\n                    </form>\r\n                    {/* Permissions */}\r\n                    <form noValidate autoComplete=\"off\">\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )   \r\n}\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\Queue\\Queue.js",["260"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import PaperButton from '../../components/Controls/Button/PaperButton'\r\nimport ButtonGroup from '../../components/Controls/Button/ButtonGroup'\r\nimport Table from '../../components/Table/Table'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n          width: theme.spacing(16),\r\n          height: theme.spacing(16),\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n    // fixedHeight: {\r\n    //     height: 500,\r\n    // }\r\n}));\r\n\r\nexport default function Queue(props) {\r\n    const classes = useStyles();\r\n    const [buttons] = useState([\r\n        {quantity: 128, category: \"Capacity\", icon: PeopleAltIcon},\r\n        {quantity: 32, category: \"Queue\", icon: AssignmentTurnedInIcon},\r\n        {quantity: 2, category: \"Notifications\", icon: NotificationsIcon},\r\n        {quantity: 4, category: \"Alert\", icon: AnnouncementIcon},\r\n    ]);\r\n\r\n    return(\r\n        <Grid container spacing={3} justify=\"center\">\r\n            <Grid item xs={12}>\r\n                <ButtonGroup buttons={buttons} page=\"Queue\"/>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n                <Paper className={classes.paper}>\r\n                    <Table />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         lang : state.lang\r\n//     }\r\n// }\r\n\r\n// export default connect(mapStateToProps,null)(Home);","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\Button\\Button.js",[],["261","262"],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Snackbar\\SnackbarAction.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\assets\\Local\\messages.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\Button\\ButtonGroup.js",["263","264","265"],"import React from 'react';\r\nimport PaperButton from './PaperButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setCurrentTable } from '../../../store/Table/TableAction'\r\nimport { setCurrentSetting } from '../../../store/Setting/SettingAction'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: theme.spacing(16),\r\n            height: theme.spacing(16),\r\n        },\r\n    },\r\n    paper: {\r\n        marginLeft: 30\r\n    }\r\n}));\r\n\r\nconst ButtonGroup = ({ buttons, page }) => {\r\n    const classes = useStyles()\r\n    let category = useSelector(page == \"Queue\" ? state => state.table.category : state => state.setting.category)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = (category) => {\r\n        if (page == \"Queue\") {\r\n            dispatch(setCurrentTable(category))\r\n        }\r\n        if (page == \"Settings\") {\r\n            dispatch(setCurrentSetting(category))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {buttons.map((button, i) => {\r\n                return (\r\n                    <div key={\"Button\" + i + button.category} className={classes.paper}>\r\n                        <PaperButton selected={button.category === category} quantity={button.quantity} category={button.category} icon={button.icon} handleClick={() => handleClick(button.category)} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ButtonGroup","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Table\\Table.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\network\\apis\\index.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\assets\\Local\\ar.js",["266"],"export default {\r\n  ar: {\r\n    hello: \"مرحبا\",\r\n    langBtn : \"English\",\r\n    home: {\r\n      content:\r\n        'لوريم إيبسوم(Lorem Ipsum) هو ببساطة نص شكلي (بمعنى أن الغاية هي الشكل وليس المحتوى) ويُستخدم في صناعات المطابع ودور النشر. كان لوريم إيبسوم ولايزال المعيار للنص الشكلي منذ القرن الخامس عشر عندما قامت مطبعة مجهولة برص مجموعة من الأحرف بشكل عشوائي أخذتها من نص، لتكوّن كتيّب بمثابة دليل أو مرجع شكلي لهذه الأحرف. خمسة قرون من الزمن لم تقضي على هذا النص، بل انه حتى صار مستخدماً وبشكله الأصلي في الطباعة والتنضيد الإلكتروني. انتشر بشكل كبير في ستينيّات هذا القرن مع إصدار رقائق \"ليتراسيت\" (Letraset) البلاستيكية تحوي مقاطع من هذا النص، وعاد لينتشر مرة أخرى مؤخراَ مع ظهور برامج النشر الإلكتروني مثل \"ألدوس بايج مايكر\" (Aldus PageMaker) والتي حوت أيضاً على نسخ من نص لوريم إيبسوم.'\r\n    },\r\n    snackbar: {\r\n      'success' : 'تم بنجاح'\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\assets\\Local\\en.js",["267"],"export default {\r\n  en: {\r\n    hello : 'Hello',\r\n    langBtn : \"عربى\",\r\n    home: {\r\n      content:\r\n        \"What is Lorem Ipsum?Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n    },\r\n    snackbar: {\r\n      'success' : 'Done successfully'\r\n    }\r\n  }\r\n}\r\n",["268","269"],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Setting\\SettingAction.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Table\\TableAction.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\Button\\PaperButton.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Table\\Title.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\utils\\Constants.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\network\\interceptors\\index.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\store\\Loader\\LoaderAction.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Table\\CustomersTable.js",["270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"// Boilerplate for the orders table found on every page.\r\nimport * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CircleCheckedFilled from \"@material-ui/icons/CheckCircle\";\r\nimport CircleUnchecked from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Title from \"./Title\";\r\nimport { dispatchSnackbarSuccess } from \"../../utils/Shared\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport {TableContainer} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 100 },\r\n  { field: 'firstName', headerName: 'First name', width: 150 },\r\n  { field: 'lastName', headerName: 'Last name', width: 150 },\r\n  { field: 'contactNumber', headerName: 'Contact #', width: 150 },\r\n  { field: 'emailAddress', headerName: 'Email Address', width: 170 },\r\n  { field: 'entryDate', headerName: 'Entry Date', type: 'dateTime', width: 200 },\r\n  { field: 'exitDate', headerName: 'Exit Date', type: 'dateTime', width: 200 }\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, lastName: 'Snow', firstName: 'Jon', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 20, 0), exitDate: new Date(2020, 5, 5, 5, 40, 0) },\r\n  { id: 2, lastName: 'Lane', firstName: 'Carrie', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 43, 0), exitDate: new Date(2020, 5, 5, 6, 0, 0) },\r\n  { id: 3, lastName: 'Lane', firstName: 'Jaime', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate:new Date(2020, 5, 5, 5, 30, 0), exitDate:new Date(2020, 5, 5, 5, 45, 0) },\r\n  { id: 4, lastName: 'Stark', firstName: 'Aria', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 0, 0), exitDate: new Date(2020, 5, 5, 5, 15, 0) },\r\n  { id: 5, lastName: 'Trails', firstName: 'Dan', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 10, 0), exitDate: new Date(2020, 5, 5, 5, 30, 0) },\r\n  { id: 6, lastName: 'Mercer', firstName: 'Max', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 10, 17, 3, 24, 0), exitDate: new Date(2020, 10, 17, 3, 26, 0) },\r\n  { id: 7, lastName: 'Clifford', firstName: 'Fiona', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 10, 0), exitDate: new Date(2020, 5, 5, 5, 45, 0) },\r\n  { id: 8, lastName: 'Arrows', firstName: 'Ross', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 10, 17, 3, 23, 0), exitDate: new Date(2020, 10, 17, 3, 25, 0) },\r\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 25, 0), exitDate: new Date(2020, 5, 5, 5, 35, 0) },\r\n  { id: 10, lastName: 'Roxie', firstName: 'Harvey', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 25, 0), exitDate: new Date(2020, 5, 5, 5, 35, 0) }\r\n];\r\n\r\nclass CustomersTable extends React.Component{\r\n  state = {\r\n    customers: rows,\r\n    possibleContacts: [],\r\n    selectedRows: [],\r\n    loading: false\r\n  }\r\n/*\r\n  contactTrace = (selectedRows) => {\r\n    let infectedCustomers = this.state.customers.filter(customer => this.state.selectedRows.includes(customer.id.toString()));\r\n    let newPossibleContacts = this.state.customers.filter(possibleContact => (\r\n      infectedCustomers.some(infectedCustomer => (\r\n        (possibleContact.entryDate <= infectedCustomer.exitDate) && (possibleContact.exitDate >= infectedCustomer.entryDate)\r\n          && (possibleContact.id != infectedCustomer.id))\r\n    )\r\n    ));\r\n\r\n    this.setState({\r\n      possibleContacts: newPossibleContacts\r\n    })\r\n  }\r\n  */\r\n\r\n  render(){\r\n    return (\r\n      <div style={{ padding: 10 }}>\r\n        <Title>Records</Title>\r\n        <div style={{ height: 600, width: '100%' }}>\r\n          <DataGrid\r\n            rows={this.state.customers}\r\n            columns={columns}\r\n            pageSize={9}\r\n            sortingMode='client' sortingOrder={['asc', 'desc', null]}\r\n            loading={this.state.loading}\r\n            checkboxSelection\r\n            onSelectionChange={newSelectedRows => this.setState({selectedRows: newSelectedRows.rowIds})}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomersTable;\r\n/*\r\n<div style={{ height: 300, width: '100%' }}>\r\n  <DataGrid\r\n    rows={this.state.possibleContacts}\r\n    columns={columns}\r\n    pageSize={3}\r\n    sortingMode='client' sortingOrder={['asc', 'desc', null]}\r\n    loading={this.state.loading}\r\n  />\r\n</div>\r\n*/\r\n\r\n/*\r\ncomponentWillMount() {\r\n    this.callAPI();\r\n}\r\n\r\ncallAPI() {\r\n  fetch(\"http://localhost:9000/testAPI\")\r\n      .then(res => res.json())\r\n      .then(res => this.setState({ customers: res, loading: false }), () => this.formatDates());\r\n}\r\n\r\nformatDates = () => {\r\n  let formatedCustomers = this.state.customers.forEach((item, i) => {\r\n    item.entryDate = new Date(JSON.parse(item.entryDate));\r\n  });\r\n\r\n  this.setState({\r\n    customers: formatedCustomers\r\n  })\r\n\r\n  //row.exitDate = new Date(JSON.parse(row.exitDate));\r\n}\r\n*/\r\n\r\n\r\n\r\n/*\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.primary.light\r\n  }\r\n}));\r\n\r\nfunction createData(id, lastName, firstName, contactNumber, emailAddress){//}), entryDate, exitDate) {\r\n  return { id, lastName, firstName, contactNumber, emailAddress }//, entryDate, exitDate };\r\n}\r\n\r\nconst rows = [\r\n  createData( 1, 'Snow', 'Jon', '123-456-7890', \"name@email.com\"),//, new Date(2020, 5, 5, 5, 20, 0), new Date(2020, 5, 5, 5, 40, 0) ),\r\n  createData( 2, 'Lane', 'Carrie', '123-456-7890', \"name@email.com\"),//, new Date(2020, 5, 5, 5, 43, 0), new Date(2020, 5, 5, 6, 0, 0) ),\r\n  createData( 3, 'Lane', 'Jaime', '123-456-7890', \"name@email.com\")//, new Date(2020, 5, 5, 5, 30, 0), new Date(2020, 5, 5, 5, 45, 0) )\r\n];\r\n\r\nexport default function CustomersTable(props) {\r\n  const category = useSelector(state => state.table.category)\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [paid] = useState(rows);\r\n  function preventDefault(event) {\r\n    setViewAll(!viewAll)\r\n    event.preventDefault();\r\n  }\r\n  const maxEvents = 10;\r\n\r\n  const classes = useStyles();\r\n  const handlePaid = (message) => {\r\n    dispatchSnackbarSuccess(message);\r\n  }\r\n  const date = new Date()\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          justifyContent: \"space-between\",\r\n          alignContent: \"space-between\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <Title>Customers</Title>\r\n        <div className={classes.seeMore}>\r\n          <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n            View All\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            <TableCell><b>First Name</b></TableCell>\r\n            <TableCell><b>Last Name</b></TableCell>\r\n            <TableCell><b>Contact Number</b></TableCell>\r\n            <TableCell><b>Email Address</b></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {paid.map((row, i) => {\r\n            return ((i < maxEvents || viewAll) && <TableRow key={row.id}>\r\n              <TableCell>\r\n                <Checkbox\r\n                  icon={<CircleUnchecked />}\r\n                  checkedIcon={<CircleCheckedFilled />}\r\n                  onClick={() => {\r\n                    console.log('checked')\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell>{row.lastName}</TableCell>\r\n              <TableCell>{row.firstName}</TableCell>\r\n              <TableCell>{row.contactNumber}</TableCell>\r\n              <TableCell>{row.emailAddress}</TableCell>\r\n            </TableRow>)\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\n*/\r\n\r\n/*\r\n{ id: 4, lastName: 'Stark', firstName: 'Aria', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 0, 0), exitDate: new Date(2020, 5, 5, 5, 15, 0) ),\r\n{ id: 5, lastName: 'Trails', firstName: 'Dan', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 10, 0), exitDate: new Date(2020, 5, 5, 5, 30, 0) ),\r\n{ id: 6, lastName: 'Mercer', firstName: 'Max', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 10, 17, 3, 24, 0), exitDate: new Date(2020, 10, 17, 3, 26, 0) ),\r\n{ id: 7, lastName: 'Clifford', firstName: 'Fiona', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 10, 0), exitDate: new Date(2020, 5, 5, 5, 45, 0) ),\r\n{ id: 8, lastName: 'Arrows', firstName: 'Ross', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 10, 17, 3, 23, 0), exitDate: new Date(2020, 10, 17, 3, 25, 0) ),\r\n{ id: 9, lastName: 'Roxie', firstName: 'Harvey', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 25, 0), exitDate: new Date(2020, 5, 5, 5, 35, 0) )\r\n*/\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Table\\PossibleContactsTable.js",["286","287","288","289","290","291"],"// Boilerplate for the orders table found on every page.\r\nimport * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CircleCheckedFilled from \"@material-ui/icons/CheckCircle\";\r\nimport CircleUnchecked from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Title from \"./Title\";\r\nimport { dispatchSnackbarSuccess } from \"../../utils/Shared\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.primary.light\r\n  }\r\n}));\r\n\r\nfunction createData(id, lastName, firstName, contactNumber, emailAddress){//}), entryDate, exitDate) {\r\n  return { id, lastName, firstName, contactNumber, emailAddress }//, entryDate, exitDate };\r\n}\r\n\r\nconst rows = [\r\n  createData( 1, 'Snow', 'Jon', '123-456-7890', \"name@email.com\"),//, new Date(2020, 5, 5, 5, 20, 0), new Date(2020, 5, 5, 5, 40, 0) ),\r\n  createData( 2, 'Lane', 'Carrie', '123-456-7890', \"name@email.com\"),//, new Date(2020, 5, 5, 5, 43, 0), new Date(2020, 5, 5, 6, 0, 0) ),\r\n  createData( 3, 'Lane', 'Jaime', '123-456-7890', \"name@email.com\")//, new Date(2020, 5, 5, 5, 30, 0), new Date(2020, 5, 5, 5, 45, 0) )\r\n];\r\n\r\nexport default function PossibleContactsTable(props) {\r\n  const category = useSelector(state => state.table.category)\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [paid] = useState(rows);\r\n  function preventDefault(event) {\r\n    setViewAll(!viewAll)\r\n    event.preventDefault();\r\n  }\r\n  const maxEvents = 10;\r\n\r\n  const classes = useStyles();\r\n  const handlePaid = (message) => {\r\n    dispatchSnackbarSuccess(message);\r\n  }\r\n  const date = new Date()\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          justifyContent: \"space-between\",\r\n          alignContent: \"space-between\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <Title>Possible Contacts</Title>\r\n        <div className={classes.seeMore}>\r\n          <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n            View All\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell><b>First Name</b></TableCell>\r\n            <TableCell><b>Last Name</b></TableCell>\r\n            <TableCell><b>Contact Number</b></TableCell>\r\n            <TableCell><b>Email Address</b></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {paid.map((row, i) => {\r\n            return ((i < maxEvents || viewAll) && <TableRow key={row.id}>\r\n              <TableCell>{row.lastName}</TableCell>\r\n              <TableCell>{row.firstName}</TableCell>\r\n              <TableCell>{row.contactNumber}</TableCell>\r\n              <TableCell>{row.emailAddress}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {\" \"}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  classes={classes.button}\r\n                  color=\"primary\"\r\n                  style={{ borderRadius: 5 }}\r\n                  onClick={() => handlePaid(\"Notification sent to \"+row.name)}\r\n                >\r\n                  <span style={{color: \"white\"}} >Notify</span>\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>)\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\n/*\r\n{ id: 4, lastName: 'Stark', firstName: 'Aria', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 0, 0), exitDate: new Date(2020, 5, 5, 5, 15, 0) ),\r\n{ id: 5, lastName: 'Trails', firstName: 'Dan', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 10, 0), exitDate: new Date(2020, 5, 5, 5, 30, 0) ),\r\n{ id: 6, lastName: 'Mercer', firstName: 'Max', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 10, 17, 3, 24, 0), exitDate: new Date(2020, 10, 17, 3, 26, 0) ),\r\n{ id: 7, lastName: 'Clifford', firstName: 'Fiona', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 10, 0), exitDate: new Date(2020, 5, 5, 5, 45, 0) ),\r\n{ id: 8, lastName: 'Arrows', firstName: 'Ross', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 10, 17, 3, 23, 0), exitDate: new Date(2020, 10, 17, 3, 25, 0) ),\r\n{ id: 9, lastName: 'Roxie', firstName: 'Harvey', contactNumber:'123-456-7890', emailAddress: \"name@email.com\", entryDate: new Date(2020, 5, 5, 5, 25, 0), exitDate: new Date(2020, 5, 5, 5, 35, 0) )\r\n*/\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Snackbar\\Snackbar.js",[],"C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\containers\\CustomerForm\\CustomerForm.js",["292","293","294","295"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Container, Row, Col, Jumbotron, Button, Form } from 'react-bootstrap';\r\nimport Logo from \"../../assets/images/ScreenitLogo.png\"\r\n\r\n\r\nURL = 'http://localhost:3000/api/form/submission' //hardcode for now\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingTop: \"10vh\",\r\n    paddingRight: \"50vh\",\r\n    paddingLeft: \"50vh\",\r\n    paddingBottom: \"10vh\",\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    backgroundColor: theme.palette.primary.dark,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  formHeadRight: {       \r\n    backgroundColor: theme.palette.primary.main,\r\n    height: \"20vh\",\r\n    width: \"50vh\",\r\n    borderRadius: \"11px\",\r\n    color: \"white\",\r\n    fontSize: \"28px\",\r\n  },\r\n  titleText: {\r\n  \ttextAlign: \"center\",\r\n\tposition: \"relative\",\r\n\ttop: \"50%\",\r\n\ttransform: \"translateY(-50%)\",\r\n\tfontFamily: \"Monaco\",\r\n\tfontSize: \"130%\"\r\n  },\r\n  formHeadLeft: {       \r\n    backgroundColor: theme.palette.primary.main,\r\n    height: \"20vh\",\r\n    width: \"1vh\",\r\n    borderRadius: \"11px\",\r\n    textAlign: \"center\",\r\n    padding: '0'\r\n\r\n  },\r\n  formBody: {       \r\n    backgroundColor: theme.palette.primary.main,\r\n    width: \"50vh\",\r\n    borderRadius: \"11px\",\r\n    paddingBottom: \"3vh\"\r\n  },\r\n  headRow: {\r\n  \tpaddingBottom: \"8vh\",\r\n  },\r\n  innerFormDiv: {\r\n  \tborderRadius: \"11px\",\r\n\t  width: \"95%\",\r\n\t  padding: \"9%\",\r\n\t  margin: \"0 auto\",\r\n\t  backgroundColor: \"white\"\r\n  }\r\n}));\r\n\r\nexport default function CustomerForm(props) {\r\n\tconst classes = useStyles();\r\n\tvar user_data = {\r\n\t\t'firstname': '',\r\n\t\t'lastname': '',\r\n\t\t'email': '',\r\n\t\t'address': '',\r\n\t\t'phone': ''\r\n\t}\r\n\r\n\r\n\tconst handleFormChange = (key, value) => {\r\n    \tuser_data[key] = value;\r\n  \t};\r\n\r\n\r\n  \tconst verifyData = () => {\r\n  \t\treturn true\r\n  \t}\r\n\r\n\r\n  \tconst postData = () => {\r\n  \t\tconsole.log('posting', JSON.stringify(user_data))\r\n  \t\tfetch(URL, {\r\n\t\t  method: 'POST',\r\n\t\t  headers: {\r\n\t\t    'Accept': 'application/json',\r\n\t\t    'Content-Type': 'application/json',\r\n\t\t  },\r\n\t\t  body: JSON.stringify(user_data)\r\n\t\t})\r\n\r\n  \t}\r\n\r\n\r\n  \tconst handleSubmit = () => {\r\n  \t\tif (!verifyData()){\r\n  \t\t\t//indicate error here\r\n  \t\t\treturn\r\n  \t\t}\r\n\r\n  \t\tpostData()\r\n\r\n  \t}\r\n\r\n\r\n    return(\r\n        <div className={classes.content}>\r\n\t        <Container fluid>\r\n\t        <Row className={classes.headRow} >\r\n\t        \t<Col xs={{ span: 3, offset: 1 }} sm={{ span: 3, offset: 1 }} md={{ span: 3, offset: 1 }} lg={{ span: 3, offset: 1 }} xl={{ span: 3, offset: 1 }} className={classes.formHeadLeft}>\r\n\t        \t\t<img src={Logo} alt=\"ScreenIT\" height=\"100%\"></img>\r\n\t\t        </Col>\r\n\r\n\t\t        <Col xs={{ span: 6, offset: 1 }} sm={{ span: 6, offset: 1 }} md={{ span: 6, offset: 1 }} lg={{ span: 6, offset: 1 }} xl={{ span: 6, offset: 1}} className={classes.formHeadRight}>\r\n\t\t           \t<div className={classes.titleText}>\r\n\t\t            \tInformation Form\r\n\t\t            </div>\r\n\t\t        </Col>\r\n\t\t    </Row>\t\r\n\t        <Row>\r\n\t        \t<Col className={classes.formBody}>\r\n\t\t            <br />\r\n\t\t            <div className={classes.innerFormDiv}>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formName\">\r\n\t\t\t\t\t\t  <Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t  <Row>\r\n\t\t\t\t\t\t    <Col>\r\n\t\t\t\t\t\t      <Form.Control placeholder=\"First name\" onChange={(event) => {handleFormChange('firstname', event.target.value)}}/>\r\n\t\t\t\t\t\t    </Col>\r\n\t\t\t\t\t\t    <Col>\r\n\t\t\t\t\t\t      <Form.Control placeholder=\"Last name\" onChange={(event) => {handleFormChange('lastname', event.target.value)}}/>\r\n\t\t\t\t\t\t    </Col>\r\n\t\t\t\t\t\t  </Row>\r\n\t\t\t\t\t\t   </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t    <Form.Label>Email address</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={(event) => {handleFormChange('email', event.target.value)}}/>\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t    <Form.Label>Phone Number</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control type=\"tel\" placeholder=\"Phone Number\" onChange={(event) => {handleFormChange('phone', event.target.value)}}/>\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t    <Form.Label>Address</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control type=\"address\" placeholder=\"Address\" onChange={(event) => {handleFormChange('address', event.target.value)}}/>\r\n\t\t\t\t\t\t    <Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t      We'll never share your information with anyone else.\r\n\t\t\t\t\t\t    </Form.Text>\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\r\n\t\t\t\t\t\t  <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n\t\t\t\t\t\t    Submit\r\n\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t        </Col>\r\n\t\t    </Row>\r\n\t        </Container>\r\n        </div>\r\n    )   \r\n}","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\InputField\\ForgotPasswordField.js",["296","297"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AccountCircle,\r\n  LockRounded,\r\n  Visibility,\r\n  VisibilityOff,\r\n} from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ForgotPasswordField = ({\r\n  values,\r\n  handleChange,\r\n  handleClickShowPassword,\r\n  handleMouseDownPassword,\r\n  setSelected,\r\n}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        maxWidth: 400,\r\n        minWidth: 300,\r\n      }}\r\n    >\r\n      <TextField\r\n        label=\"Email\"\r\n        margin=\"normal\"\r\n        value={values.email}\r\n        onChange={handleChange(\"email\")}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <TextField\r\n        type={values.showPassword ? \"text\" : \"password\"}\r\n        label=\"Password\"\r\n        margin=\"normal\"\r\n        value={values.password}\r\n        onChange={handleChange(\"password\")}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <LockRounded />\r\n            </InputAdornment>\r\n          ),\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n              >\r\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <Link to=\"/login\" onClick={() => setSelected(\"Log In\")}>\r\n        Cancel\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default ForgotPasswordField;\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\InputField\\LoginField.js",["298","299"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AccountCircle,\r\n  LockRounded,\r\n  Visibility,\r\n  VisibilityOff,\r\n  Business,\r\n} from \"@material-ui/icons\";\r\nconst LoginField = ({\r\n  values,\r\n  handleChange,\r\n  handleClickShowPassword,\r\n  handleMouseDownPassword,\r\n}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        maxWidth: 400,\r\n        minWidth: 300,\r\n      }}\r\n    >\r\n      <TextField\r\n        label=\"Establishment ID\"\r\n        margin=\"normal\"\r\n        value={values.establishmentId}\r\n        onChange={handleChange(\"establishmentId\")}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Business />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <TextField\r\n        label=\"Email\"\r\n        margin=\"normal\"\r\n        value={values.email}\r\n        onChange={handleChange(\"email\")}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <TextField\r\n        type={values.showPassword ? \"text\" : \"password\"}\r\n        label=\"Password\"\r\n        margin=\"normal\"\r\n        value={values.password}\r\n        onChange={handleChange(\"password\")}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <LockRounded />\r\n            </InputAdornment>\r\n          ),\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n              >\r\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default LoginField;\r\n","C:\\Users\\Max\\Documents\\ScreenIt\\frontend\\src\\components\\Controls\\InputField\\RegisterField.js",["300"],"import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  InputAdornment,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AccountCircle,\r\n  LockRounded,\r\n  Visibility,\r\n  VisibilityOff,\r\n  Business,\r\n  Email,\r\n  AssignmentInd,\r\n} from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  dispatchSnackbarError,\r\n  dispatchSnackbarSuccess,\r\n} from \"../../../utils/Shared\";\r\nimport { axiosInstance } from \"../../../network/apis\";\r\nimport History from \"../../../routes/History\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.main,\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: 400,\r\n    minWidth: 300,\r\n    marginTop: 10,\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n}));\r\n\r\nconst RegisterField = ({\r\n  values,\r\n  handleChange,\r\n  handleClickShowPassword,\r\n  handleMouseDownPassword,\r\n  setSelected,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [establishmentId, setEstablishmentId] = useState(\"\");\r\n  const [role, setRole] = useState(\"Admin\");\r\n  const [name, setName] = useState(\"\");\r\n  const handleRegister = async () => {\r\n    const requestOptions = {\r\n      establishmentId: establishmentId,\r\n      name: name,\r\n      role: role,\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    await axiosInstance\r\n      .post(\"/auth/signup\", requestOptions)\r\n      .then((response) => {\r\n        dispatchSnackbarSuccess(\"Registered Successfully\");\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response.data.errors.message);\r\n        dispatchSnackbarError(error.response.data);\r\n      });\r\n    History.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        maxWidth: 400,\r\n        minWidth: 300,\r\n      }}\r\n    >\r\n      <TextField\r\n        label=\"Establishment ID\"\r\n        margin=\"normal\"\r\n        value={establishmentId}\r\n        onChange={(e) => setEstablishmentId(e.target.value)}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Business />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <TextField\r\n        label=\"Name\"\r\n        margin=\"normal\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <TextField\r\n        label=\"role\"\r\n        margin=\"normal\"\r\n        value={role}\r\n        disabled={true}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AssignmentInd />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <TextField\r\n        label=\"Email\"\r\n        margin=\"normal\"\r\n        value={values.email}\r\n        onChange={handleChange(\"email\")}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Email />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <TextField\r\n        type={values.showPassword ? \"text\" : \"password\"}\r\n        label=\"Password\"\r\n        margin=\"normal\"\r\n        value={values.password}\r\n        onChange={handleChange(\"password\")}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <LockRounded />\r\n            </InputAdornment>\r\n          ),\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n              >\r\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <div className={classes.content}>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() => handleRegister()}\r\n        >\r\n          Register\r\n        </Button>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Button>\r\n          <Link\r\n            to=\"/login\"\r\n            onClick={() => setSelected(\"Log In\")}\r\n            className={classes.button}\r\n          >\r\n            Go Back\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterField;\r\n",{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","severity":1,"message":"306","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":14},{"ruleId":"309","severity":1,"message":"310","line":5,"column":1,"nodeType":"311","endLine":14,"endColumn":3},{"ruleId":"309","severity":1,"message":"310","line":6,"column":1,"nodeType":"311","endLine":16,"endColumn":3},{"ruleId":"309","severity":1,"message":"310","line":3,"column":1,"nodeType":"311","endLine":20,"endColumn":3},{"ruleId":"305","severity":1,"message":"312","line":24,"column":8,"nodeType":"307","messageId":"308","endLine":24,"endColumn":12},{"ruleId":"309","severity":1,"message":"313","line":9,"column":1,"nodeType":"311","endLine":11,"endColumn":3},{"ruleId":"305","severity":1,"message":"314","line":3,"column":8,"nodeType":"307","messageId":"308","endLine":3,"endColumn":16},{"ruleId":"305","severity":1,"message":"315","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":17},{"ruleId":"305","severity":1,"message":"316","line":4,"column":8,"nodeType":"307","messageId":"308","endLine":4,"endColumn":19},{"ruleId":"305","severity":1,"message":"317","line":6,"column":8,"nodeType":"307","messageId":"308","endLine":6,"endColumn":29},{"ruleId":"305","severity":1,"message":"318","line":10,"column":8,"nodeType":"307","messageId":"308","endLine":10,"endColumn":30},{"ruleId":"305","severity":1,"message":"319","line":11,"column":8,"nodeType":"307","messageId":"308","endLine":11,"endColumn":25},{"ruleId":"305","severity":1,"message":"320","line":12,"column":8,"nodeType":"307","messageId":"308","endLine":12,"endColumn":24},{"ruleId":"305","severity":1,"message":"321","line":16,"column":8,"nodeType":"307","messageId":"308","endLine":16,"endColumn":17},{"ruleId":"305","severity":1,"message":"322","line":17,"column":8,"nodeType":"307","messageId":"308","endLine":17,"endColumn":18},{"ruleId":"305","severity":1,"message":"323","line":18,"column":8,"nodeType":"307","messageId":"308","endLine":18,"endColumn":18},{"ruleId":"305","severity":1,"message":"324","line":49,"column":10,"nodeType":"307","messageId":"308","endLine":49,"endColumn":17},{"ruleId":"305","severity":1,"message":"315","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":17},{"ruleId":"305","severity":1,"message":"315","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":17},{"ruleId":"301","replacedBy":"325"},{"ruleId":"303","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":28,"column":37,"nodeType":"329","messageId":"330","endLine":28,"endColumn":39},{"ruleId":"327","severity":1,"message":"328","line":32,"column":18,"nodeType":"329","messageId":"330","endLine":32,"endColumn":20},{"ruleId":"327","severity":1,"message":"328","line":35,"column":18,"nodeType":"329","messageId":"330","endLine":35,"endColumn":20},{"ruleId":"309","severity":1,"message":"313","line":1,"column":1,"nodeType":"311","endLine":13,"endColumn":3},{"ruleId":"309","severity":1,"message":"313","line":1,"column":1,"nodeType":"311","endLine":13,"endColumn":2},{"ruleId":"301","replacedBy":"331"},{"ruleId":"303","replacedBy":"332"},{"ruleId":"305","severity":1,"message":"333","line":3,"column":10,"nodeType":"307","messageId":"308","endLine":3,"endColumn":18},{"ruleId":"305","severity":1,"message":"334","line":4,"column":8,"nodeType":"307","messageId":"308","endLine":4,"endColumn":12},{"ruleId":"305","severity":1,"message":"335","line":6,"column":8,"nodeType":"307","messageId":"308","endLine":6,"endColumn":13},{"ruleId":"305","severity":1,"message":"336","line":7,"column":8,"nodeType":"307","messageId":"308","endLine":7,"endColumn":17},{"ruleId":"305","severity":1,"message":"337","line":8,"column":8,"nodeType":"307","messageId":"308","endLine":8,"endColumn":17},{"ruleId":"305","severity":1,"message":"338","line":9,"column":8,"nodeType":"307","messageId":"308","endLine":9,"endColumn":17},{"ruleId":"305","severity":1,"message":"339","line":10,"column":8,"nodeType":"307","messageId":"308","endLine":10,"endColumn":16},{"ruleId":"305","severity":1,"message":"340","line":11,"column":8,"nodeType":"307","messageId":"308","endLine":11,"endColumn":16},{"ruleId":"305","severity":1,"message":"341","line":12,"column":8,"nodeType":"307","messageId":"308","endLine":12,"endColumn":27},{"ruleId":"305","severity":1,"message":"342","line":13,"column":8,"nodeType":"307","messageId":"308","endLine":13,"endColumn":23},{"ruleId":"305","severity":1,"message":"343","line":14,"column":8,"nodeType":"307","messageId":"308","endLine":14,"endColumn":14},{"ruleId":"305","severity":1,"message":"344","line":16,"column":10,"nodeType":"307","messageId":"308","endLine":16,"endColumn":33},{"ruleId":"305","severity":1,"message":"345","line":17,"column":9,"nodeType":"307","messageId":"308","endLine":17,"endColumn":20},{"ruleId":"305","severity":1,"message":"346","line":17,"column":22,"nodeType":"307","messageId":"308","endLine":17,"endColumn":33},{"ruleId":"305","severity":1,"message":"347","line":20,"column":9,"nodeType":"307","messageId":"308","endLine":20,"endColumn":23},{"ruleId":"305","severity":1,"message":"348","line":22,"column":7,"nodeType":"307","messageId":"308","endLine":22,"endColumn":16},{"ruleId":"305","severity":1,"message":"340","line":11,"column":8,"nodeType":"307","messageId":"308","endLine":11,"endColumn":16},{"ruleId":"305","severity":1,"message":"341","line":12,"column":8,"nodeType":"307","messageId":"308","endLine":12,"endColumn":27},{"ruleId":"305","severity":1,"message":"342","line":13,"column":8,"nodeType":"307","messageId":"308","endLine":13,"endColumn":23},{"ruleId":"305","severity":1,"message":"346","line":17,"column":22,"nodeType":"307","messageId":"308","endLine":17,"endColumn":33},{"ruleId":"305","severity":1,"message":"349","line":39,"column":9,"nodeType":"307","messageId":"308","endLine":39,"endColumn":17},{"ruleId":"305","severity":1,"message":"350","line":52,"column":9,"nodeType":"307","messageId":"308","endLine":52,"endColumn":13},{"ruleId":"305","severity":1,"message":"315","line":3,"column":10,"nodeType":"307","messageId":"308","endLine":3,"endColumn":17},{"ruleId":"305","severity":1,"message":"351","line":4,"column":8,"nodeType":"307","messageId":"308","endLine":4,"endColumn":17},{"ruleId":"305","severity":1,"message":"352","line":5,"column":31,"nodeType":"307","messageId":"308","endLine":5,"endColumn":40},{"ruleId":"301","severity":1,"message":"353","line":9,"column":1,"nodeType":"307","messageId":"354","endLine":9,"endColumn":4},{"ruleId":"305","severity":1,"message":"355","line":3,"column":3,"nodeType":"307","messageId":"308","endLine":3,"endColumn":7},{"ruleId":"305","severity":1,"message":"343","line":6,"column":3,"nodeType":"307","messageId":"308","endLine":6,"endColumn":9},{"ruleId":"305","severity":1,"message":"355","line":3,"column":3,"nodeType":"307","messageId":"308","endLine":3,"endColumn":7},{"ruleId":"305","severity":1,"message":"343","line":6,"column":3,"nodeType":"307","messageId":"308","endLine":6,"endColumn":9},{"ruleId":"305","severity":1,"message":"356","line":58,"column":16,"nodeType":"307","messageId":"308","endLine":58,"endColumn":23},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'fork' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Auth' is defined but never used.","Assign object to a variable before exporting as module default","'messages' is defined but never used.","'connect' is defined but never used.","'ButtonGroup' is defined but never used.","'PossibleContactsTable' is defined but never used.","'AssignmentTurnedInIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'AnnouncementIcon' is defined but never used.","'InputBase' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'buttons' is assigned a value but never used.",["357"],["358"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["357"],["358"],"'useState' is defined but never used.","'Link' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Checkbox' is defined but never used.","'CircleCheckedFilled' is defined but never used.","'CircleUnchecked' is defined but never used.","'Button' is defined but never used.","'dispatchSnackbarSuccess' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'TableContainer' is defined but never used.","'useStyles' is assigned a value but never used.","'category' is assigned a value but never used.","'date' is assigned a value but never used.","'TextField' is defined but never used.","'Jumbotron' is defined but never used.","Read-only global 'URL' should not be modified.","nativeReassign","'Grid' is defined but never used.","'setRole' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]